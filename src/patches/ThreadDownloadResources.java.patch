--- a/net/minecraft/src/ThreadDownloadResources.java
+++ b/net/minecraft/src/ThreadDownloadResources.java
@@ -34,38 +34,8 @@
 	}
 
 	void deleteDirectoryWalkTree(java.nio.file.Path path1) throws IOException {
-		SimpleFileVisitor simpleFileVisitor2 = new SimpleFileVisitor() {
-			public FileVisitResult visitFile(java.nio.file.Path path1, BasicFileAttributes basicFileAttributes2) throws IOException {
-				Files.delete(path1);
-				return FileVisitResult.CONTINUE;
-			}
-
-			public FileVisitResult visitFileFailed(java.nio.file.Path path1, IOException iOException2) throws IOException {
-				Files.delete(path1);
-				return FileVisitResult.CONTINUE;
-			}
-
-			public FileVisitResult postVisitDirectory(java.nio.file.Path path1, IOException iOException2) throws IOException {
-				if(iOException2 != null) {
-					throw iOException2;
-				} else {
-					Files.delete(path1);
-					return FileVisitResult.CONTINUE;
-				}
-			}
-
-			public FileVisitResult postVisitDirectory(Object object1, IOException iOException2) throws IOException {
-				return this.postVisitDirectory((java.nio.file.Path)object1, iOException2);
-			}
-
-			public FileVisitResult visitFileFailed(Object object1, IOException iOException2) throws IOException {
-				return this.visitFileFailed((java.nio.file.Path)object1, iOException2);
-			}
-
-			public FileVisitResult visitFile(Object object1, BasicFileAttributes basicFileAttributes2) throws IOException {
-				return this.visitFile((java.nio.file.Path)object1, basicFileAttributes2);
-			}
-		};
+		SimpleFileVisitor simpleFileVisitor2 = new FileVisitor();
+		
 		Files.walkFileTree(path1, simpleFileVisitor2);
 	}
 
@@ -169,5 +139,38 @@
 	}
 
 	private void downloadResource(URL url, File file, long size) throws IOException {
+	}
+
+	static class FileVisitor extends SimpleFileVisitor {
+		public FileVisitResult visitFile(java.nio.file.Path path1, BasicFileAttributes basicFileAttributes2) throws IOException {
+			Files.delete(path1);
+			return FileVisitResult.CONTINUE;
+		}
+
+		public FileVisitResult visitFileFailed(java.nio.file.Path path1, IOException iOException2) throws IOException {
+			Files.delete(path1);
+			return FileVisitResult.CONTINUE;
+		}
+
+		public FileVisitResult postVisitDirectory(java.nio.file.Path path1, IOException iOException2) throws IOException {
+			if(iOException2 != null) {
+				throw iOException2;
+			} else {
+				Files.delete(path1);
+				return FileVisitResult.CONTINUE;
+			}
+		}
+
+		public FileVisitResult postVisitDirectory(Object object1, IOException iOException2) throws IOException {
+			return this.postVisitDirectory((java.nio.file.Path)object1, iOException2);
+		}
+
+		public FileVisitResult visitFileFailed(Object object1, IOException iOException2) throws IOException {
+			return this.visitFileFailed((java.nio.file.Path)object1, iOException2);
+		}
+
+		public FileVisitResult visitFile(Object object1, BasicFileAttributes basicFileAttributes2) throws IOException {
+			return this.visitFile((java.nio.file.Path)object1, basicFileAttributes2);
+		}
 	}
 }
